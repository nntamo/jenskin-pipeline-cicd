apiVersion: apps/v1
kind: Deployment
metadata:
  name: cast-db-prod  # Remplacer prod par dev/qa/staging/prod
  namespace: prod
  labels:
    app: cast-db
    environment: prod
    component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cast-db
      environment: prod
  strategy:
    type: Recreate  # Standard pour toutes les bases de données
  template:
    metadata:
      labels:
        app: cast-db
        environment: prod
        component: database
    spec:
      # Security context standard pour tous les environnements
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      
      containers:
      - name: postgres
        image: postgres:15-alpine  # Version identique partout
        ports:
        - containerPort: 5432
          name: postgres
        
        # Configuration des secrets identique partout
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: cast-db-secret
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cast-db-secret
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: cast-db-secret
              key: POSTGRES_DB
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_INITDB_ARGS
          value: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
        
        # RESSOURCES - Seule différence entre environnements
        resources:
          requests:
            memory: "MEMORY_REQUEST"  # Variable selon env
            cpu: "CPU_REQUEST"       # Variable selon env
          limits:
            memory: "MEMORY_LIMIT"   # Variable selon env
            cpu: "CPU_LIMIT"         # Variable selon env
        
        # Health checks identiques partout
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
            - -d
            - $(POSTGRES_DB)
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
            - -d
            - $(POSTGRES_DB)
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
        
        startupProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
            - -d
            - $(POSTGRES_DB)
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
          successThreshold: 1
        
        # Volumes identiques partout
        volumeMounts:
        - name: postgres-data-cast
          mountPath: /var/lib/postgresql/data
        - name: shared-memory
          mountPath: /dev/shm
      
      volumes:
      - name: postgres-data-cast
        persistentVolumeClaim:
          claimName: postgres-data-cast-prod
      - name: shared-memory
        emptyDir:
          medium: Memory
          sizeLimit: "SHARED_MEMORY_SIZE"  # Variable selon env


