apiVersion: apps/v1
kind: Deployment
metadata:
  name: cast-db-prod
  namespace: prod
  labels:
    app: cast-db
    environment: prod
    component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cast-db
      environment: prod
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: cast-db
        environment: prod
        component: database
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
     
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
          name: postgres
       
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: cast-db-secret
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cast-db-secret
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: cast-db-secret
              key: POSTGRES_DB
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_INITDB_ARGS
          value: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
       
        # Configuration identique - seules les valeurs changent
        resources:
          requests:
            memory: "512Mi"   # Identique partout
            cpu: "250m"       # Identique partout
          limits:
            memory: "1Gi"     # Identique partout
            cpu: "500m"       # Identique partout
       
        volumeMounts:
        - name: postgres-data-cast
          mountPath: /var/lib/postgresql/data
        - name: shared-memory
          mountPath: /dev/shm
     
      volumes:
      - name: postgres-data-cast
        persistentVolumeClaim:
          claimName: postgres-data-cast-prod
      - name: shared-memory
        emptyDir:
          medium: Memory
          sizeLimit: "128Mi"   # Identique partout