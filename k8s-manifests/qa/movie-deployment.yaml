apiVersion: apps/v1
kind: Deployment
metadata:
  name: movie-service-qa
  namespace: qa
  labels:
    app: movie-service
    environment: qa
    component: api
spec:
  replicas: 3  # Cohérent avec cast-service-qa
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: movie-service
      environment: qa
  template:
    metadata:
      labels:
        app: movie-service
        environment: qa
        component: api
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      
      imagePullSecrets:
      - name: dockerhub-secret
      
      containers:
      - name: movie-service
        image: nguetsop/movie-service:v.16.0
        ports:
        - containerPort: 8000
          name: http
        
        # CORRECTION: Utilisation des secrets au lieu de valeurs en dur
        env:
        - name: DATABASE_URI
          valueFrom:
            secretKeyRef:
              name: movie-db-secret
              key: DATABASE_URI
        - name: CAST_SERVICE_HOST_URL
          value: "http://cast-service:8000/api/v1/casts/"
        - name: ENVIRONMENT
          value: "qa"
        
        # CORRECTION: Ressources appropriées pour QA (entre dev et prod)
        resources:
          requests:
            memory: "256Mi"
            cpu: "125m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        
        # Health checks essentiels pour QA
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
      
      # Distribution des 3 replicas sur différents nœuds
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - movie-service
              topologyKey: kubernetes.io/hostname